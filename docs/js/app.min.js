!function($){"use strict";
//***************************************
// Main Application
// To get direct links to audio files in Google Drive:
// http://directlink.booogle.net/
//***************************************
angular.module("app",["ui.router","ngAnimate","firebase"]).run(["$sce","$timeout","$rootScope","$state","$stateParams","$window","$firebaseAuth",function($sce,$timeout,$rootScope,$state,$stateParams,$window,$firebaseAuth){
// It's very handy to add references to $state and $stateParams to the
// $rootScope
$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$rootScope.cache={},$rootScope.config={years:[{label:"2020-21",base:"appArZiLlaI2Oor0E",key:"keypmXJ00DbWmRvx9",table:"tbl6nqMtXha2zbbqv"}],admins:{"jeff@albatrossdigital.com":{role:"admin"},"lisa.perloff@gmail.com":{role:"admin",teacher:"lisa"}},default_year:"2020-21"},
// Handle year changing
$rootScope.activeYear=$window.localStorage.getItem("sightWordsAssessmentYear")?JSON.parse($window.localStorage.getItem("sightWordsAssessmentYear")):$rootScope.config.years[0],$rootScope.setYear=function(year,e){e.preventDefault(),$window.localStorage.setItem("sightWordsAssessmentYear",JSON.stringify(year)),$rootScope.activeYear=year,$state.go("students",{reload:!0}),$window.location.href="/?"+(new Date).getTime()+"#/admin/students"},
// Authentication
$rootScope.auth=$firebaseAuth();var firebaseUser=$window.localStorage.getItem("firebaseUser");firebaseUser=firebaseUser?JSON.parse(firebaseUser):null,$rootScope.firebaseUser=firebaseUser,
// any time auth state changes, add the user data to scope
$rootScope.auth.$onAuthStateChanged(function(firebaseUser){if(firebaseUser=JSON.parse(JSON.stringify(firebaseUser))){var role,role;role=firebaseUser&&null!=firebaseUser&&firebaseUser.email&&void 0!==$rootScope.config.admins[firebaseUser.email]?$rootScope.config.admins[firebaseUser.email]:{role:"student"},firebaseUser.role=role,firebaseUser.time=new Date,firebaseUser.providerData=void 0}else role=null;if($rootScope.firebaseUser!=firebaseUser&&($rootScope.firebaseUser=firebaseUser,$window.localStorage.setItem("firebaseUser",JSON.stringify(firebaseUser))),firebaseUser&&"login"===$state.current.name)if("admin"===role.role){var params=void 0!=role.teacher?{query:role.teacher}:{};$state.go("students",params)}else $state.go("myFlashcards")});
// Toggle topnav dropdowns
var resetDropdown=function(){$rootScope.dropdown={year:"",user:""}};resetDropdown(),$rootScope.toggleDropdown=function(key,e){e.preventDefault(),$rootScope.dropdown[key]="open"===$rootScope.dropdown[key]?"":"open"},
// Check login
$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){toState.auth&&($rootScope.firebaseUser||(event.preventDefault(),$state.go("login",{msg:"You need to login"})),toState.auth&&toState.auth!=$rootScope.firebaseUser.role.role&&(event.preventDefault(),$state.go("login",{msg:"Sorry, you don't have access."}))),resetDropdown()}),$rootScope.logout=function(e){$rootScope.firebaseUser=null,$window.localStorage.setItem("firebaseUser",null),$rootScope.auth.$signOut()};
// Airtable
var Airtable=require("airtable");$rootScope.Airtable=new Airtable({apiKey:$rootScope.activeYear.key}).base($rootScope.activeYear.base)}]).config(["$locationProvider","$stateProvider","$urlRouterProvider",function($locationProvider,$stateProvider,$urlRouterProvider){
/////////////////////////////
// Redirects and Otherwise //
/////////////////////////////
// Use $urlRouterProvider to configure any redirects (when) and invalid
// urls (otherwise).
$urlRouterProvider.when("/admin","/admin/students").when("/me","/my/flashcards").otherwise("/"),
//////////////////////////
// State Configurations //
//////////////////////////
$stateProvider.state("login",{url:"/?msg",templateUrl:"views/login.html",controller:function($scope,$rootScope,$state,$filter,$timeout){$scope.msg=$state.params.msg,$scope.clickLogin=function(e){e.preventDefault()}}}).state("students",{url:"/admin/students/:query",auth:"admin",templateUrl:"views/students.html",
// auth: true,
/*resolve: {
                cards: function ($stateParams, $rootScope, $http) {

                }
            },*/
controller:function($scope,$rootScope,$state,$filter,$http){var data=[];$rootScope.Airtable("Students").select({sort:[{field:"LastName",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,data.push(record.fields)}),fetchNextPage()},function(error){$scope.students=data,$scope.$apply()}),$scope.query=$state.params.query,$scope.order="Last+Name",$scope.setSort=function(key,e){e.preventDefault(),key=key.replace(/ /g,"+"),$scope.order=$scope.order==key?"-"+key:key},$scope.checkall=!1,$scope.checkallClick=function(){for(var arr=$filter("filter")($scope.students,$scope.query),i=0;i<arr.length;i++)arr[i].selected=$scope.checkall},$scope.print=function(){for(var students=[],i=0;i<$scope.students.length;i++)$scope.students[i].selected&&students.push($scope.students[i].id);students.length>10&&!confirm("Printing over 10 students at a time doesn't always work.  If you run in to issues, wait one minute, click Back, and refresh the page. \n\n Are you sure you want to continue?")||(students.length?$state.go("printAssessment",{students:students.join(",")}):alert("Please select at least one student"))}}}).state("editAssessment",{url:"/admin/student/:student/:type",auth:"admin",template:'<assessment edit="true" type="type" student="student"></assessment>',controller:function($scope,$rootScope,$state,$filter,$http){$scope.type=$state.params.type,$scope.student=$state.params.student}}).state("viewAssessment",{url:"/student/:student/:type",template:'<assessment type="type" student="student"></assessment>',controller:function($scope,$rootScope,$state,$filter,$http){$scope.type=$state.params.type,$scope.student=$state.params.student}}).state("printAssessment",{url:"/print/:students",templateUrl:"views/print.html",auth:"admin",controller:function($scope,$rootScope,$state,$filter,$http){var students=$state.params.students.split(",");$scope.total=students.length,$scope.words="words",$scope.letters="letters",$scope.students=students}}).state("myFlashcards",{url:"/my/flashcards/:type",template:'<assessment type="type" student="student" force-flashcards="true" ng-if="student"></assessment>',controller:function($scope,$rootScope,$state,$filter,$timeout){var formula='LOWER(Email) = "'+$rootScope.firebaseUser.email+'"',students=[];$rootScope.Airtable("Students").select({filterByFormula:formula}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,students.push(record.fields)}),fetchNextPage()},function(error){1===students.length&&($scope.student=students[0].id,$scope.type=students[0].TotalLetters>=70?"words":"letters",$scope.$apply())})}}).state("studentFlashcards",{url:"/flashcards/:student/:type",template:'<assessment type="type" student="student" force-flashcards="true"></assessment>',controller:function($scope,$rootScope,$state,$filter,$timeout){$scope.student=$state.params.student,$scope.type=$state.params.type}}).state("studentSearch",{url:"/search",templateUrl:"views/student-search.html",controller:function($scope,$rootScope,$state,$filter,$timeout){var formula="{Grade} = 0",data=[];$rootScope.Airtable("Students").select({filterByFormula:formula,sort:[{field:"LastName",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,data.push(record.fields)}),fetchNextPage()},function(error){$scope.students=data,$scope.$apply()}),$scope.startsWith=function(actual,expected){var lowerStr=(actual.FirstName+"").toLowerCase();return 0===lowerStr.indexOf(expected.toLowerCase())},$scope.go=function(student,e){e.preventDefault(),$state.go("studentFlashcards",{student:student.id,type:student.TotalLetters>=70?"words":"letters"})},$timeout(function(){document.getElementById("student-search").focus()},0)}})}]),angular.module("app").directive("assessment",function($rootScope,$state,$sce,$timeout){return{restrict:"E",restrict:"E",replace:!0,transclude:!0,scope:{type:"=",student:"=",edit:"=",print:"@",forceFlashcards:"@"},templateUrl:"views/assessment.html",link:function($scope,$element,$attrs,$window){$scope.type=$scope.type.replace(/\b\S/g,function(t){return t.toUpperCase()}),$scope.show=!1,$timeout(function(){$scope.link=window.location.href.replace("/admin",""),$scope.flashcardsLink=$scope.link.replace("/student","/flashcards")},0);var colors=[];if($rootScope.Airtable("Colors").select({sort:[{field:"ID",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,colors.push(record.fields)}),fetchNextPage()},function(error){$scope.colors=colors,$scope.$apply()}),void 0==$rootScope.cache[$scope.type]){var items=[];$rootScope.Airtable($scope.type).select({sort:[{field:"ID",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,items.push(record.fields)}),fetchNextPage()},function(error){$rootScope.cache[$scope.type]=items,$scope.items=items,$scope.$apply()})}else $scope.items=$rootScope.cache[$scope.type];if(void 0==$rootScope.cache[$scope.type+" Groups"]){var groups=[];$rootScope.Airtable($scope.type+" Groups").select({sort:[{field:"Order",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,groups.push(record.fields)}),fetchNextPage()},function(error){$rootScope.cache[$scope.type+" Groups"]=groups,$scope.groups=groups,$scope.$apply()})}else $scope.groups=$rootScope.cache[$scope.type+" Groups"];var getStudents=function(cb,assessment){var studentID="string"==typeof $scope.student?$scope.student:$scope.student.id;$rootScope.Airtable("Students").find(studentID,function(err,record){record.fields.id=record.id,$scope.student=record.fields,$scope.show=!$scope.print,$scope.$apply();var assessments=[],disabledItems={},sum=0;$rootScope.Airtable($scope.type+" Assessments").select({filterByFormula:'{Student} = "'+record.fields.ID+'"',sort:[{field:"Date",direction:"asc"}]}).eachPage(function(records,fetchNextPage){records.forEach(function(record){record.fields.id=record.id,sum+=record.fields.Items?record.fields.Items.length:0,record.fields.sum=sum,assessments.push(record.fields)}),fetchNextPage()},function(error){$scope.show=!!assessments.length,$scope.assessments=assessments;for(var j=0;j<assessments.length;j++)if(assessments[j].Items)for(var i=0;i<assessments[j].Items.length;i++)disabledItems[assessments[j].Items[i]]=assessments[j].Color[0];$scope.disabledItems=disabledItems,cb&&cb(assessment,assessments),$scope.toggle.online&&$scope.updateFlashcards($scope.printFlashcardPages),$scope.$apply()})})};getStudents(),$scope.linkClick=function($event){$event.target.select()},$scope.toggleWord=function(word){var index=$scope.assessment.Items.indexOf(word);index!=-1?$scope.assessment.Items.splice(index,1):$scope.assessment.Items.push(word)},$scope.setColor=function(color){$scope.assessment.Color[0]=color.id,$scope.activeColor=color},$scope.newAssessment=function(){$scope.assessment={Color:[!1],Items:[],Student:[$scope.student],Date:new Date}},$scope.clickAssessment=function(item,e){if($scope.edit)if($scope.assessment&&item.id==$scope.assessment.id)$scope.assessment=null;else for(var j=0;j<$scope.assessments.length;j++)if($scope.assessments[j].id==item.id){$scope.assessments[j].Date=new Date($scope.assessments[j].Date),$scope.assessment=$scope.assessments[j];for(var i=0;i<$scope.colors.length;i++)$scope.colors[i].id==$scope.assessment.Color[0]&&$scope.setColor($scope.colors[i])}},$scope.cancelAssessment=function(){$scope.assessment=null},$scope.saveAssessment=function(assessment){if(!assessment.Color||!assessment.Color[0])return alert("You must select a color"),!1;if(assessment.id){var id=assessment.id;delete assessment.id,delete assessment.ID,delete assessment.$$hashKey,delete assessment.sum,$rootScope.Airtable($scope.type+" Assessments").update(id,assessment,function(err,record){return err?(alert("There was a problem saving this assessment!"),void console.error(err)):($scope.assessment=null,void getStudents(saveAssessmentCallback,assessment))})}else assessment.Date=new Date(assessment.Date).toISOString().slice(0,10),assessment.Student[0]="object"==typeof assessment.Student[0]?assessment.Student[0].id:assessment.Student[0],$rootScope.Airtable($scope.type+" Assessments").create(assessment,function(err,record){return err?(alert("There was a problem saving this assessment!"),void console.log(err)):($scope.assessment=null,void getStudents(saveAssessmentCallback,assessment))})};var saveAssessmentCallback=function(assessment,assessments){var studentEdit={};studentEdit["Last"+$scope.type+"Assessment"]=assessment.Date;var last=assessments.pop();studentEdit["Total"+$scope.type]=last.sum,$rootScope.Airtable("Students").update($scope.student.id,studentEdit,function(err,record){return err?void console.log(err):($scope.assessment=null,void getStudents())})};$scope.toggle={print:!1,online:!!$scope.forceFlashcards&&$scope.forceFlashcards},$scope.printFlashcardPages=2,$scope.toggleFlashcards=function(key){$scope.toggle[key]=!$scope.toggle[key],$scope.updateFlashcards()},$scope.flashcardShowImages=!0,$scope.updateFlashcards=function(pages,showImages){showImages=void 0==showImages?$scope.flashcardShowImages:showImages,pages=void 0==pages?$scope.printFlashcardPages:pages,pages=showImages?pages/2:pages;var items=[],count=0;
// Words was having issues with load order
$scope.items||$timeout(function(){$scope.updateFlashcards(pages)},100);for(var i=0;i<$scope.items.length;i++)if(count<10*pages&&!$scope.disabledItems[$scope.items[i].id]){for(var item=$scope.items[i],j=0;j<$scope.groups.length;j++)if(item.Group&&$scope.groups[j].id==item.Group[0]){item.GroupLabel=$scope.groups[j].Label;for(var colorLabel=$scope.groups[j].Label.split("-")[0].trim(),k=0;k<$scope.colors.length;k++)$scope.colors[k].Label.toLowerCase()===colorLabel.toLowerCase()&&(item.Color="#"+$scope.colors[k].Code)}items.push(item),
// Add image flashcard (if we're adding those)
showImages&&item.Image&&items.push({Image:item.Image}),count++}$scope.flashcards=items},$scope.groupLabel=function(string){return string.indexOf("-")!==-1?string.split("-")[1].trim():string}}}}),angular.module("app").directive("flashcards",function($rootScope,$state,$sce,$timeout,$window){return{restrict:"E",replace:!0,transclude:!0,scope:{cards:"=",colors:"="},templateUrl:"views/flashcards.html",link:function($scope,$element,$attrs){function shuffle(array){
// While there remain elements to shuffle...
for(var temporaryValue,randomIndex,currentIndex=array.length;0!==currentIndex;)
// Pick a remaining element...
randomIndex=Math.floor(Math.random()*currentIndex),currentIndex-=1,
// And swap it with the current element.
temporaryValue=array[currentIndex],array[currentIndex]=array[randomIndex],array[randomIndex]=temporaryValue;return array}for(var out=[],i=0;i<$scope.cards.length;i++)out.push({question:$scope.cards[i].Item,color:$scope.cards[i].Color,recording:$scope.cards[i].Recording,answer:null,pronunciation:null,icon:$scope.cards[i].GroupLabel.indexOf("Sounds")!=-1&&"fa-assistive-listening-systems"});out=shuffle(out);var oAudio=document.getElementById("myaudio"),go=$scope.go=function(delta){$scope.i+=delta,$scope.i<0&&($scope.i=0),$scope.i>=$scope.total?$scope.stage="done":($scope.item=$scope.data[$scope.i],$scope.stage="question",oAudio.pause(),oAudio.src=$scope.item.recording)},resetList=($scope.play=function(){$scope.stage="answer",oAudio.play()},function(data){$scope.data=data,$scope.total=data.length,$scope.i=0,go(0)});resetList(out),$scope.answers={correct:0,incorrect:0};$scope.answer=function(status){$scope.item.status=status,$scope.answers[status]++,go(1)};$scope.filteredList=function(status){if($scope.answers[status]>0){var data=$scope.data.filter(function(record){return"incorrect"==record.status});resetList(data)}},$scope.back=function(e){e.preventDefault(),
// @todo temp hack
$window.location.reload()}}}})}(jQuery);